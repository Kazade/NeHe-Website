from django.test import TestCase
from django.test import Client

from django.contrib.auth.models import User

from articles.globs import ArticleType
from articles.models import Article

class DataGenerator(object):
    def new_user(self, username, password="password"):
        u = User(username=username, email="test@example.com", password=password)
        u.save()
        return u        

    def new_news_post(self, title, body, author, published=True):       
        p = Article(article_type=ArticleType.NEWS, 
                    title=title,
                    html_content=body,
                    author=author,
                    published=published)
        p.save()                    
        return p

class HomePageTest(TestCase, DataGenerator):
    def setUp(self):
        kazade = self.new_user("kazade")
        self.new_news_post("Test Post", "This is a test post", author=kazade)
    
    def test_works(self):
        client = Client()
        response = client.get("/")
        self.assertEqual(response.status_code, 200)
        self.assertEqual(len(response.context["news_posts"]["object_list"]), 1)
        
    def test_unpublished_dont_display(self):
        self.new_news_post("Other test", "Other", author=kaz
        client = Client()
        response = client.get("/")
        self.assertEqual(response.status_code, 200)
        self.assertEqual(len(response.context["news_posts"]["object_list"]), 1)        
